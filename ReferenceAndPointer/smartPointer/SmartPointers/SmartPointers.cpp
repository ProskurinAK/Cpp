#include <iostream>
#include <memory>
using namespace std;

int main()
{
	srand(time(NULL));

	// auto_ptr

	// auto_ptr устарел и почти не используется и похож на unique_ptr
	// в случае когда второй указатель начинает указывать на область памяти на которую указывает первый указатель, то связь первого указателя с памятью теряется
	// и на память указывает только второй указатель, а первый становится empty

	/*auto_ptr<int> ap1(new int(7));
	auto_ptr<int> ap2(ap1);*/

	// unique_ptr
	
	// unique_ptr создаёт ситуацию при которой два указателя не могут указывать на одну и туже область памяти

	unique_ptr<int> up1(new int(7));
	//unique_ptr<int> up2(up1);	// ошибка, так инициализировать нельзя

	unique_ptr<int> up2;
	up2.swap(up1);	// функция свап позволяет присвоить значение указателя 1 в указатель 2

	//int* ptr = up2.get();	// фунцкия get() позволяет получить стандартный указатель из его обёртки
	//up2.release();	//функция release позволяет освободить указатель и сделать его пустым

	// shared_ptr
	
	// shared_ptr позволяет указывать нескольким указателям на одну и туже область в памяти.
	// память будет почищена в тот момент когда последний указатель перестанет указывать на область памяти

	shared_ptr<int> sp1(new int(7));
	shared_ptr<int> sp2(sp1);

	cout << sp1 << endl;
	cout << sp2 << endl;

	return 0;
}